// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class FusionAuthEntityTypePermission extends pulumi.CustomResource {
    /**
     * Get an existing FusionAuthEntityTypePermission resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FusionAuthEntityTypePermissionState, opts?: pulumi.CustomResourceOptions): FusionAuthEntityTypePermission {
        return new FusionAuthEntityTypePermission(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fusionauth:index/fusionAuthEntityTypePermission:FusionAuthEntityTypePermission';

    /**
     * Returns true if the given object is an instance of FusionAuthEntityTypePermission.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FusionAuthEntityTypePermission {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FusionAuthEntityTypePermission.__pulumiType;
    }

    /**
     * An object that can hold any information about the Permission that should be persisted. Must be a JSON string.
     */
    public readonly data!: pulumi.Output<string | undefined>;
    /**
     * The description of the Permission.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The Id of the Entity Type.
     */
    public readonly entityTypeId!: pulumi.Output<string>;
    /**
     * Whether or not the Permission is a default permission. A default permission is automatically granted to an entity of
     * this type if no permissions are provided in a grant request.
     */
    public readonly isDefault!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the Permission.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Id to use for the new permission. If not specified a secure random UUID will be generated.
     */
    public readonly permissionId!: pulumi.Output<string>;

    /**
     * Create a FusionAuthEntityTypePermission resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FusionAuthEntityTypePermissionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FusionAuthEntityTypePermissionArgs | FusionAuthEntityTypePermissionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FusionAuthEntityTypePermissionState | undefined;
            resourceInputs["data"] = state ? state.data : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["entityTypeId"] = state ? state.entityTypeId : undefined;
            resourceInputs["isDefault"] = state ? state.isDefault : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["permissionId"] = state ? state.permissionId : undefined;
        } else {
            const args = argsOrState as FusionAuthEntityTypePermissionArgs | undefined;
            if ((!args || args.entityTypeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entityTypeId'");
            }
            resourceInputs["data"] = args ? args.data : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["entityTypeId"] = args ? args.entityTypeId : undefined;
            resourceInputs["isDefault"] = args ? args.isDefault : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["permissionId"] = args ? args.permissionId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FusionAuthEntityTypePermission.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FusionAuthEntityTypePermission resources.
 */
export interface FusionAuthEntityTypePermissionState {
    /**
     * An object that can hold any information about the Permission that should be persisted. Must be a JSON string.
     */
    data?: pulumi.Input<string>;
    /**
     * The description of the Permission.
     */
    description?: pulumi.Input<string>;
    /**
     * The Id of the Entity Type.
     */
    entityTypeId?: pulumi.Input<string>;
    /**
     * Whether or not the Permission is a default permission. A default permission is automatically granted to an entity of
     * this type if no permissions are provided in a grant request.
     */
    isDefault?: pulumi.Input<boolean>;
    /**
     * The name of the Permission.
     */
    name?: pulumi.Input<string>;
    /**
     * The Id to use for the new permission. If not specified a secure random UUID will be generated.
     */
    permissionId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FusionAuthEntityTypePermission resource.
 */
export interface FusionAuthEntityTypePermissionArgs {
    /**
     * An object that can hold any information about the Permission that should be persisted. Must be a JSON string.
     */
    data?: pulumi.Input<string>;
    /**
     * The description of the Permission.
     */
    description?: pulumi.Input<string>;
    /**
     * The Id of the Entity Type.
     */
    entityTypeId: pulumi.Input<string>;
    /**
     * Whether or not the Permission is a default permission. A default permission is automatically granted to an entity of
     * this type if no permissions are provided in a grant request.
     */
    isDefault?: pulumi.Input<boolean>;
    /**
     * The name of the Permission.
     */
    name?: pulumi.Input<string>;
    /**
     * The Id to use for the new permission. If not specified a secure random UUID will be generated.
     */
    permissionId?: pulumi.Input<string>;
}
