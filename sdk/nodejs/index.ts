// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./fusionAuthApiKey";
export * from "./fusionAuthApplication";
export * from "./fusionAuthApplicationRole";
export * from "./fusionAuthEMail";
export * from "./fusionAuthEntity";
export * from "./fusionAuthEntityGrant";
export * from "./fusionAuthEntityType";
export * from "./fusionAuthEntityTypePermission";
export * from "./fusionAuthForm";
export * from "./fusionAuthFormField";
export * from "./fusionAuthGenericConnector";
export * from "./fusionAuthGroup";
export * from "./fusionAuthIdpApple";
export * from "./fusionAuthIdpExternalJwt";
export * from "./fusionAuthIdpFacebook";
export * from "./fusionAuthIdpGoogle";
export * from "./fusionAuthIdpOpenIdConnect";
export * from "./fusionAuthIdpPsn";
export * from "./fusionAuthIdpSamlV2IdpInitiated";
export * from "./fusionAuthIdpSamlv2";
export * from "./fusionAuthIdpSteam";
export * from "./fusionAuthIdpTwitch";
export * from "./fusionAuthIdpXBox";
export * from "./fusionAuthImportedKey";
export * from "./fusionAuthKey";
export * from "./fusionAuthLambda";
export * from "./fusionAuthReactor";
export * from "./fusionAuthRegistration";
export * from "./fusionAuthSystemConfiguration";
export * from "./fusionAuthTenant";
export * from "./fusionAuthTheme";
export * from "./fusionAuthUser";
export * from "./fusionAuthUserAction";
export * from "./fusionAuthWebhook";
export * from "./getApplication";
export * from "./getApplicationRole";
export * from "./getForm";
export * from "./getIdp";
export * from "./getLambda";
export * from "./getTenant";
export * from "./getUser";
export * from "./provider";

// Export sub-modules:
import * as config from "./config";
import * as types from "./types";

export {
    config,
    types,
};

// Import resources to register:
import { FusionAuthApiKey } from "./fusionAuthApiKey";
import { FusionAuthApplication } from "./fusionAuthApplication";
import { FusionAuthApplicationRole } from "./fusionAuthApplicationRole";
import { FusionAuthEMail } from "./fusionAuthEMail";
import { FusionAuthEntity } from "./fusionAuthEntity";
import { FusionAuthEntityGrant } from "./fusionAuthEntityGrant";
import { FusionAuthEntityType } from "./fusionAuthEntityType";
import { FusionAuthEntityTypePermission } from "./fusionAuthEntityTypePermission";
import { FusionAuthForm } from "./fusionAuthForm";
import { FusionAuthFormField } from "./fusionAuthFormField";
import { FusionAuthGenericConnector } from "./fusionAuthGenericConnector";
import { FusionAuthGroup } from "./fusionAuthGroup";
import { FusionAuthIdpApple } from "./fusionAuthIdpApple";
import { FusionAuthIdpExternalJwt } from "./fusionAuthIdpExternalJwt";
import { FusionAuthIdpFacebook } from "./fusionAuthIdpFacebook";
import { FusionAuthIdpGoogle } from "./fusionAuthIdpGoogle";
import { FusionAuthIdpOpenIdConnect } from "./fusionAuthIdpOpenIdConnect";
import { FusionAuthIdpPsn } from "./fusionAuthIdpPsn";
import { FusionAuthIdpSamlV2IdpInitiated } from "./fusionAuthIdpSamlV2IdpInitiated";
import { FusionAuthIdpSamlv2 } from "./fusionAuthIdpSamlv2";
import { FusionAuthIdpSteam } from "./fusionAuthIdpSteam";
import { FusionAuthIdpTwitch } from "./fusionAuthIdpTwitch";
import { FusionAuthIdpXBox } from "./fusionAuthIdpXBox";
import { FusionAuthImportedKey } from "./fusionAuthImportedKey";
import { FusionAuthKey } from "./fusionAuthKey";
import { FusionAuthLambda } from "./fusionAuthLambda";
import { FusionAuthReactor } from "./fusionAuthReactor";
import { FusionAuthRegistration } from "./fusionAuthRegistration";
import { FusionAuthSystemConfiguration } from "./fusionAuthSystemConfiguration";
import { FusionAuthTenant } from "./fusionAuthTenant";
import { FusionAuthTheme } from "./fusionAuthTheme";
import { FusionAuthUser } from "./fusionAuthUser";
import { FusionAuthUserAction } from "./fusionAuthUserAction";
import { FusionAuthWebhook } from "./fusionAuthWebhook";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "fusionauth:index/fusionAuthApiKey:FusionAuthApiKey":
                return new FusionAuthApiKey(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthApplication:FusionAuthApplication":
                return new FusionAuthApplication(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthApplicationRole:FusionAuthApplicationRole":
                return new FusionAuthApplicationRole(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthEMail:FusionAuthEMail":
                return new FusionAuthEMail(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthEntity:FusionAuthEntity":
                return new FusionAuthEntity(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthEntityGrant:FusionAuthEntityGrant":
                return new FusionAuthEntityGrant(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthEntityType:FusionAuthEntityType":
                return new FusionAuthEntityType(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthEntityTypePermission:FusionAuthEntityTypePermission":
                return new FusionAuthEntityTypePermission(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthForm:FusionAuthForm":
                return new FusionAuthForm(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthFormField:FusionAuthFormField":
                return new FusionAuthFormField(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthGenericConnector:FusionAuthGenericConnector":
                return new FusionAuthGenericConnector(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthGroup:FusionAuthGroup":
                return new FusionAuthGroup(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthIdpApple:FusionAuthIdpApple":
                return new FusionAuthIdpApple(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthIdpExternalJwt:FusionAuthIdpExternalJwt":
                return new FusionAuthIdpExternalJwt(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthIdpFacebook:FusionAuthIdpFacebook":
                return new FusionAuthIdpFacebook(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthIdpGoogle:FusionAuthIdpGoogle":
                return new FusionAuthIdpGoogle(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthIdpOpenIdConnect:FusionAuthIdpOpenIdConnect":
                return new FusionAuthIdpOpenIdConnect(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthIdpPsn:FusionAuthIdpPsn":
                return new FusionAuthIdpPsn(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthIdpSamlV2IdpInitiated:FusionAuthIdpSamlV2IdpInitiated":
                return new FusionAuthIdpSamlV2IdpInitiated(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthIdpSamlv2:FusionAuthIdpSamlv2":
                return new FusionAuthIdpSamlv2(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthIdpSteam:FusionAuthIdpSteam":
                return new FusionAuthIdpSteam(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthIdpTwitch:FusionAuthIdpTwitch":
                return new FusionAuthIdpTwitch(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthIdpXBox:FusionAuthIdpXBox":
                return new FusionAuthIdpXBox(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthImportedKey:FusionAuthImportedKey":
                return new FusionAuthImportedKey(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthKey:FusionAuthKey":
                return new FusionAuthKey(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthLambda:FusionAuthLambda":
                return new FusionAuthLambda(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthReactor:FusionAuthReactor":
                return new FusionAuthReactor(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthRegistration:FusionAuthRegistration":
                return new FusionAuthRegistration(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthSystemConfiguration:FusionAuthSystemConfiguration":
                return new FusionAuthSystemConfiguration(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthTenant:FusionAuthTenant":
                return new FusionAuthTenant(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthTheme:FusionAuthTheme":
                return new FusionAuthTheme(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthUser:FusionAuthUser":
                return new FusionAuthUser(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthUserAction:FusionAuthUserAction":
                return new FusionAuthUserAction(name, <any>undefined, { urn })
            case "fusionauth:index/fusionAuthWebhook:FusionAuthWebhook":
                return new FusionAuthWebhook(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthApiKey", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthApplication", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthApplicationRole", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthEMail", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthEntity", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthEntityGrant", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthEntityType", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthEntityTypePermission", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthForm", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthFormField", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthGenericConnector", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthGroup", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthIdpApple", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthIdpExternalJwt", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthIdpFacebook", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthIdpGoogle", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthIdpOpenIdConnect", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthIdpPsn", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthIdpSamlV2IdpInitiated", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthIdpSamlv2", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthIdpSteam", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthIdpTwitch", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthIdpXBox", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthImportedKey", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthKey", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthLambda", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthReactor", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthRegistration", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthSystemConfiguration", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthTenant", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthTheme", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthUser", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthUserAction", _module)
pulumi.runtime.registerResourceModule("fusionauth", "index/fusionAuthWebhook", _module)

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("fusionauth", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:fusionauth") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
